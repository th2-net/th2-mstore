plugins {
    id 'com.palantir.docker' version '0.25.0'
}

apply plugin: 'java'
apply plugin: 'java-library'
apply plugin: 'com.palantir.docker'
apply plugin: 'application'

ext {
    sharedDir                   = file("${project.rootDir}/shared")
    vertxVersion                = '3.8.5'
    vertxGrpcVersion            = '1.25.0'
    junitJupiterEngineVersion   = '5.4.0'

    cradleVersion               = '1.5-SNAPSHOT'
}

group = 'com.exactpro.th2'
version = release_version

sourceCompatibility = 1.11
targetCompatibility = 1.11


repositories {
    maven {
        name 'MavenLocal'
        url sharedDir
    }
    mavenCentral()
    maven {
        name 'Artifactory snapshot'
        url 'http://artifactory5.exp.exactpro.com/artifactory/libs-snapshot'
    }
    maven {
        name 'Artifactory release'
        url 'http://artifactory5.exp.exactpro.com/artifactory/libs-release'
    }

    configurations.all {
        resolutionStrategy.cacheChangingModulesFor 0, 'seconds'
        resolutionStrategy.cacheDynamicVersionsFor 0, 'seconds'
    }
}

jar {
    manifest {
        attributes(
                'Created-By':               "${System.getProperty('java.version')} (${System.getProperty('java.vendor')})",
                'Specification-Title':      '',
                'Specification-Vendor':     'Exactpro Systems LLC',
                'Implementation-Title':     project.archivesBaseName,
                'Implementation-Vendor':    'Exactpro Systems LLC',
                'Implementation-Vendor-Id': 'com.exactpro',
                'Implementation-Version':   project.version
        )
    }
}

dependencies {
    implementation "com.exactpro.th2:th2-common:1.3.0"
    implementation "com.exactpro.th2:th2-store-common:1.3.0"

    implementation "javax.xml.bind:jaxb-api:2.2.7"
    implementation group: 'org.apache.commons', name: 'commons-lang3', version: '3.11'

    implementation "io.vertx:vertx-rx-java2:$vertxVersion"
    implementation "io.vertx:vertx-rabbitmq-client:$vertxVersion"
    testImplementation "io.vertx:vertx-junit5:$vertxVersion"

    testImplementation "org.powermock:powermock-module-junit4:2.0.2"
    testImplementation "org.powermock:powermock-api-mockito:1.7.4"
    testImplementation group: 'org.mockito', name: 'mockito-all', version: '1.10.19'

    testRuntimeOnly "org.junit.jupiter:junit-jupiter-engine:$junitJupiterEngineVersion"
    testImplementation "org.junit.jupiter:junit-jupiter-api:$junitJupiterEngineVersion"



}

test {
    useJUnitPlatform()
    testLogging {
        events 'PASSED', 'FAILED', 'SKIPPED'
    }
}

application {
    mainClassName = 'com.exactpro.th2.messagestore.DemoMessageStore'
}

applicationName = 'service'

distTar {
    archiveName "${applicationName}.tar"
}

dockerPrepare {
    dependsOn distTar
}

docker {
    name docker_image_name
    tag 'local-version', docker_image_name

    copySpec.from(tarTree("$buildDir/distributions/${applicationName}.tar"))
}